package org.bp.teuno.checklist.SQLite;

import android.content.Context;
import android.database.DatabaseErrorHandler;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteOpenHelper;
import android.os.Environment;

/**
 * CLASE QUE ADMINISTRA LA CONEXIÓN A LA BD Y SU ESTRUCTURA
 */
public class BD extends SQLiteOpenHelper {

    private static final String PATH = Environment.getExternalStorageDirectory().getAbsolutePath() + "/Database/";
    private static final String NOMBRE_BASE_DATOS = "ChecklistAutomaticoDB.db";
    private static final int VERSION_ACTUAL = 1;
    private Context contexto;

    /**
     * Constructor
     * Toma referencia hacia el contexto de la aplicación que lo invoca para
     * poder acceder a los 'assets' y 'resources' de la aplicación.
     * Crea un objeto DBOpenHelper que nos permitirá controlar la apertura de
     * la base de datos.
     *
     * @param
     */
    public BD(Context contexto) {
        super(contexto, PATH + NOMBRE_BASE_DATOS, null, VERSION_ACTUAL, new DatabaseErrorHandler() {
            @Override
            public void onCorruption(SQLiteDatabase dbObj) {

            }
        });
        this.contexto = contexto;
    }

    @Override
    public void onCreate(SQLiteDatabase db) {
        /*db.execSQL(String.format("CREATE TABLE %s (%s TEXT NOT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s DATETIME NULL, %s DATETIME NULL)", TABLAS.OPERADOR, I_OPERADOR.ID, I_OPERADOR.ID_OPERADOR, I_OPERADOR.PRIMER_NOMBRE, I_OPERADOR.PRIMER_APELLIDO, I_OPERADOR.SEGUNDO_NOMBRE, I_OPERADOR.SEGUNDO_APELLIDO, I_OPERADOR.ESTADO, I_OPERADOR.USUARIO_INGRESA, I_OPERADOR.USUARIO_MODIFICA, I_OPERADOR.FECHA_INGRESO, I_OPERADOR.FECHA_MODIFICACION));
        db.execSQL(String.format("CREATE TABLE %s (%s TEXT NOT NULL,%s TEXT NOT NULL,%s TEXT NOT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s DATETIME NULL, %s DATETIME NULL)", TABLAS.RACK, I_RACK.ID, I_RACK.NOMBRE_RACK, I_RACK.ID_FILA, I_RACK.ID_CANTIDAD_UR, I_RACK.ID_CLIENTE, I_RACK.MARCA, I_RACK.MODELO, I_RACK.SERIE, I_RACK.CODIGO_BANCO, I_RACK.ESTADO, I_RACK.USUARIO_INGRESA, I_RACK.USUARIO_MODIFICA, I_RACK.FECHA_INGRESO, I_RACK.FECHA_MODIFICACION));
        db.execSQL(String.format("CREATE TABLE %s (%s TEXT NOT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s DATETIME NULL, %s DATETIME NULL)", TABLAS.EQUIPO, I_EQUIPO.ID, I_EQUIPO.ID_FILA, I_EQUIPO.ID_RACK, I_EQUIPO.ID_RACK_UR, I_EQUIPO.NOMBRE_EQUIPO, I_EQUIPO.MARCA, I_EQUIPO.MODELO, I_EQUIPO.SERIE, I_EQUIPO.CODIGO_BANCO, I_EQUIPO.ESTADO, I_EQUIPO.USUARIO_INGRESA, I_EQUIPO.USUARIO_MODIFICA, I_EQUIPO.FECHA_INGRESO, I_EQUIPO.FECHA_MODIFICACION));
        db.execSQL(String.format("CREATE TABLE %s (%s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s DATETIME NULL, %s DATETIME NULL)", TABLAS.FILA, I_FILA.ID, I_FILA.ID_FILA, I_FILA.NOMBRE_FILA, I_FILA.ESTADO, I_FILA.USUARIO_INGRESA, I_FILA.USUARIO_MODIFICA, I_FILA.FECHA_INGRESO, I_FILA.FECHA_MODIFICACION));
        db.execSQL(String.format("CREATE TABLE %s (%s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s DATETIME NULL, %s DATETIME NULL)", TABLAS.CLIENTE, I_CLIENTE.ID, I_CLIENTE.ID_CLIENTE, I_CLIENTE.NOMBRE_CLIENTE, I_CLIENTE.ESTADO, I_CLIENTE.USUARIO_INGRESA, I_CLIENTE.USUARIO_MODIFICA, I_CLIENTE.FECHA_INGRESO, I_CLIENTE.FECHA_MODIFICACION));
        db.execSQL(String.format("CREATE TABLE %s (%s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s DATETIME NULL, %s DATETIME NULL)", TABLAS.CANTIDAD_UR, I_UR.ID, I_UR.ID_UR, I_UR.CANTIDAD_UR, I_UR.ESTADO, I_UR.USUARIO_INGRESA, I_UR.USUARIO_MODIFICA, I_UR.FECHA_INGRESO, I_UR.FECHA_MODIFICACION));
        db.execSQL(String.format("CREATE TABLE %s (%s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s DATETIME NULL, %s DATETIME NULL)", TABLAS.TIPO_ALERTA, I_TIPO_ALERTA.ID, I_TIPO_ALERTA.ID_TIPO_ALERTA, I_TIPO_ALERTA.NOMBRE_TIPO_ALERTA, I_TIPO_ALERTA.ESTADO, I_TIPO_ALERTA.USUARIO_INGRESA, I_TIPO_ALERTA.USUARIO_MODIFICA, I_TIPO_ALERTA.FECHA_INGRESO, I_TIPO_ALERTA.FECHA_MODIFICACION));
        db.execSQL(String.format("CREATE TABLE %s (%s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL,  %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s DATETIME NULL, %s DATETIME NULL)", TABLAS.COLOR_ALERTA, I_COLOR_ALERTA.ID, I_COLOR_ALERTA.ID_COLOR_ALERTA, I_COLOR_ALERTA.NOMBRE_COLOR_ALERTA, I_COLOR_ALERTA.PRUEBA, I_COLOR_ALERTA.ESTADO, I_COLOR_ALERTA.USUARIO_INGRESA, I_COLOR_ALERTA.USUARIO_MODIFICA, I_COLOR_ALERTA.FECHA_INGRESO, I_COLOR_ALERTA.FECHA_MODIFICACION));
        db.execSQL(String.format("CREATE TABLE %s (%s TEXT NULL, %s TEXT NULL, %s TEXT NULL,  %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s DATETIME NULL, %s DATETIME NULL)", TABLAS.RACK_UR, I_RACK_UR.ID, I_RACK_UR.ID_RACK, I_RACK_UR.UR, I_RACK_UR.ESTADO, I_RACK_UR.USUARIO_INGRESA, I_RACK_UR.USUARIO_MODIFICA, I_RACK_UR.FECHA_INGRESO, I_RACK_UR.FECHA_MODIFICACION));
        db.execSQL(String.format("CREATE TABLE %s (%s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s DATETIME NULL, %s DATETIME NULL)", TABLAS.TURNO, I_TURNO.ID, I_TURNO.TURNO, I_TURNO.HORA_INICIO, I_TURNO.HORA_FIN, I_TURNO.ESTADO, I_TURNO.USUARIO_INGRESA, I_TURNO.USUARIO_MODIFICA, I_TURNO.FECHA_INGRESO, I_TURNO.FECHA_MODIFICACION));
        db.execSQL(String.format("CREATE TABLE %s (%s TEXT NOT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s BLOB, %s TEXT NULL, %s TEXT NULL, %s DATETIME NULL, %s DATETIME NULL)", TABLAS.ALERTA, I_ALERTA.ID, I_ALERTA.ID_FILA, I_ALERTA.ID_RACK, I_ALERTA.ID_RACK_UR, I_ALERTA.ID_EQUIPO, I_ALERTA.ID_TIPO_ALERTA, I_ALERTA.ID_COLOR_ALERTA, I_ALERTA.COMENTARIO, I_ALERTA.TICKET_EXTERNO, I_ALERTA.IMAGEN, I_ALERTA.ESTADO, I_ALERTA.USUARIO_INGRESA, I_ALERTA.USUARIO_MODIFICA, I_ALERTA.FECHA_INGRESO, I_ALERTA.FECHA_MODIFICACION));
        db.execSQL(String.format("CREATE TABLE %s (%s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s DATETIME NULL, %s DATETIME NULL)", TABLAS.GRUPO, I_GRUPO.ID, I_GRUPO.ID_GRUPO, I_GRUPO.NOMBRE_GRUPO, I_GRUPO.PIN_SEGURIDAD, I_GRUPO.PERMISO_FILA, I_GRUPO.PERMISO_CLIENTE, I_GRUPO.PERMISO_CANTIDAD_UR, I_GRUPO.PERMISO_COLOR_ALERTA, I_GRUPO.PERMISO_TIPO_ALERTA, I_GRUPO.PERMISO_RACK, I_GRUPO.PERMISO_EQUIPO, I_GRUPO.PERMISO_ALERTA, I_GRUPO.PERMISO_PASILLO, I_GRUPO.PERMISO_CHILLER, I_GRUPO.PERMISO_AREA, I_GRUPO.PERMISO_GRUPO, I_GRUPO.PERMISO_VERSION, I_GRUPO.PERMISO_PARAMETROS, I_GRUPO.ESTADO, I_GRUPO.USUARIO_INGRESA, I_GRUPO.USUARIO_MODIFICA, I_GRUPO.FECHA_INGRESO, I_GRUPO.FECHA_MODIFICACION));
        db.execSQL(String.format("CREATE TABLE %s (%s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s DATETIME NULL, %s DATETIME NULL)", TABLAS.PASILLO, I_PASILLO.ID, I_PASILLO.ID_PASILLO, I_PASILLO.NOMBRE_PASILLO, I_PASILLO.TIPO_PASILLO, I_PASILLO.ESTADO, I_PASILLO.USUARIO_INGRESA, I_PASILLO.USUARIO_MODIFICA, I_PASILLO.FECHA_INGRESO, I_PASILLO.FECHA_MODIFICACION));
        db.execSQL(String.format("CREATE TABLE %s (%s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s DATETIME NULL, %s DATETIME NULL)", TABLAS.AREA, I_AREA.ID, I_AREA.ID_AREA, I_AREA.NOMBRE_AREA, I_AREA.TIPO_AREA, I_AREA.ESTADO, I_AREA.USUARIO_INGRESA, I_AREA.USUARIO_MODIFICA, I_AREA.FECHA_INGRESO, I_AREA.FECHA_MODIFICACION));
        db.execSQL(String.format("CREATE TABLE %s (%s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s DATETIME NULL, %s DATETIME NULL)", TABLAS.CHILLER, I_CHILLER.ID, I_CHILLER.ID_CHILLER, I_CHILLER.NOMBRE_CHILLER, I_CHILLER.MARCA, I_CHILLER.MODELO, I_CHILLER.SERIE, I_CHILLER.ESTADO, I_CHILLER.USUARIO_INGRESA, I_CHILLER.USUARIO_MODIFICA, I_CHILLER.FECHA_INGRESO, I_CHILLER.FECHA_MODIFICACION));
        db.execSQL(String.format("CREATE TABLE %s (%s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s DATETIME NULL, %s DATETIME NULL)", TABLAS.VERSION, I_VERSION.ID, I_VERSION.ID_VERSION, I_VERSION.NOMBRE_VERSION, I_VERSION.MENSAJE, I_VERSION.COLABORADORES, I_VERSION.ESTADO, I_VERSION.USUARIO_INGRESA, I_VERSION.USUARIO_MODIFICA, I_VERSION.FECHA_INGRESO, I_VERSION.FECHA_MODIFICACION));
        db.execSQL(String.format("CREATE TABLE %s (%s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s DATETIME NULL, %s DATETIME NULL)", TABLAS.TIPO_PASILLO, I_TIPO_PASILLO.ID, I_TIPO_PASILLO.ID_TIPO_PASILLO, I_TIPO_PASILLO.NOMBRE_TIPO_PASILLO, I_TIPO_PASILLO.ESTADO, I_TIPO_PASILLO.USUARIO_INGRESA, I_TIPO_PASILLO.USUARIO_MODIFICA, I_TIPO_PASILLO.FECHA_INGRESO, I_TIPO_PASILLO.FECHA_MODIFICACION));
        db.execSQL(String.format("CREATE TABLE %s (%s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s DATETIME NULL, %s DATETIME NULL)", TABLAS.TIPO_AREA, I_TIPO_AREA.ID, I_TIPO_AREA.ID_TIPO_AREA, I_TIPO_AREA.NOMBRE_TIPO_AREA, I_TIPO_AREA.ESTADO, I_TIPO_AREA.USUARIO_INGRESA, I_TIPO_AREA.USUARIO_MODIFICA, I_TIPO_AREA.FECHA_INGRESO, I_TIPO_AREA.FECHA_MODIFICACION));
        db.execSQL(String.format("CREATE TABLE %s (%s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s DATETIME NULL, %s DATETIME NULL)", TABLAS.A56, I_A56.ID, I_A56.ID_ALERTA, I_A56.A, I_A56.C, I_A56.PDUA, I_A56.PDUB, I_A56.HORA_INGRESO, I_A56.HORA_SALIDA, I_A56.ID_TURNO, I_A56.RONDA, I_A56.ESTADO, I_A56.USUARIO_INGRESA, I_A56.USUARIO_MODIFICA, I_A56.FECHA_INGRESO, I_A56.FECHA_MODIFICACION));
        db.execSQL(String.format("CREATE TABLE %s (%s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s DATETIME NULL, %s DATETIME NULL)", TABLAS.A76, I_A76.ID, I_A76.ID_FILA, I_A76.ID_RACK, I_A76.ID_CANTIDAD_UR, I_A76.UR_OCUPADAS, I_A76.UR_DISPONIBLES, I_A76.HORA_INGRESO, I_A76.HORA_SALIDA, I_A76.ID_TURNO, I_A76.RONDA, I_A76.ESTADO, I_A76.USUARIO_INGRESA, I_A76.USUARIO_MODIFICA, I_A76.FECHA_INGRESO, I_A76.FECHA_MODIFICACION));
        db.execSQL(String.format("CREATE TABLE %s (%s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s DATETIME NULL, %s DATETIME NULL)", TABLAS.PARAMETROS, I_PARAMETROS.ID, I_PARAMETROS.TEMP_PAS_MINIMA, I_PARAMETROS.TEMP_PAS_MAXIMA, I_PARAMETROS.HUME_PAS_MINIMA, I_PARAMETROS.HUME_PAS_MAXIMA, I_PARAMETROS.TEMP_SUM_MINIMA, I_PARAMETROS.TEMP_SUM_MAXIMA, I_PARAMETROS.TEMP_RET_MINIMA, I_PARAMETROS.TEMP_RET_MAXIMA, I_PARAMETROS.ESTADO, I_PARAMETROS.USUARIO_INGRESA, I_PARAMETROS.USUARIO_MODIFICA, I_PARAMETROS.FECHA_INGRESO, I_PARAMETROS.FECHA_MODIFICACION));
        db.execSQL(String.format("CREATE TABLE %s (%s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s DATETIME NULL, %s DATETIME NULL)", TABLAS.A58_PASILLO, I_A58_Pasillo.ID, I_A58_Pasillo.ID_PASILLO, I_A58_Pasillo.TEMPERATURA, I_A58_Pasillo.HUMEDAD, I_A58_Pasillo.HORA_INGRESO, I_A58_Pasillo.HORA_SALIDA, I_A58_Pasillo.ID_TURNO, I_A58_Pasillo.RONDA, I_A58_Pasillo.ESTADO, I_A58_Pasillo.USUARIO_INGRESA, I_A58_Pasillo.USUARIO_MODIFICA, I_A58_Pasillo.FECHA_INGRESO, I_A58_Pasillo.FECHA_MODIFICACION));
        db.execSQL(String.format("CREATE TABLE %s (%s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s DATETIME NULL, %s DATETIME NULL)", TABLAS.A58_CHILLER, I_A58_Chiller.ID, I_A58_Chiller.ID_CHILLER, I_A58_Chiller.TEMP_SUMINISTRO, I_A58_Chiller.TEMP_RETORNO, I_A58_Chiller.HORA_INGRESO, I_A58_Chiller.HORA_SALIDA, I_A58_Chiller.ID_TURNO, I_A58_Chiller.RONDA, I_A58_Chiller.ESTADO, I_A58_Chiller.USUARIO_INGRESA, I_A58_Chiller.USUARIO_MODIFICA, I_A58_Chiller.FECHA_INGRESO, I_A58_Chiller.FECHA_MODIFICACION));
        db.execSQL(String.format("CREATE TABLE %s (%s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s DATETIME NULL, %s DATETIME NULL)", TABLAS.A77_AREA, I_A77_Area.ID, I_A77_Area.ID_AREA, I_A77_Area.LUMINOSIDAD, I_A77_Area.RUIDO, I_A77_Area.HORA_INGRESO, I_A77_Area.HORA_SALIDA, I_A77_Area.ID_TURNO, I_A77_Area.RONDA, I_A77_Area.ESTADO, I_A77_Area.USUARIO_INGRESA, I_A77_Area.USUARIO_MODIFICA, I_A77_Area.FECHA_INGRESO, I_A77_Area.FECHA_MODIFICACION));
        db.execSQL(String.format("CREATE TABLE %s (%s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s DATETIME NULL, %s DATETIME NULL)", TABLAS.A77_PASILLO, I_A77_Pasillo.ID, I_A77_Pasillo.ID_PASILLO, I_A77_Pasillo.LUMINOSIDAD_A, I_A77_Pasillo.LUMINOSIDAD_C, I_A77_Pasillo.LUMINOSIDAD_B, I_A77_Pasillo.RUIDO_A, I_A77_Pasillo.RUIDO_C, I_A77_Pasillo.RUIDO_B, I_A77_Pasillo.HORA_INGRESO, I_A77_Pasillo.HORA_SALIDA, I_A77_Pasillo.ID_TURNO, I_A77_Pasillo.RONDA, I_A77_Pasillo.ESTADO, I_A77_Pasillo.USUARIO_INGRESA, I_A77_Pasillo.USUARIO_MODIFICA, I_A77_Pasillo.FECHA_INGRESO, I_A77_Pasillo.FECHA_MODIFICACION));
        db.execSQL(String.format("CREATE TABLE %s (%s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s DATETIME NULL, %s DATETIME NULL)", TABLAS.A77_AIRE, I_A77_Aire.ID, I_A77_Aire.ID_PASILLO, I_A77_Aire.A1, I_A77_Aire.A2, I_A77_Aire.A3, I_A77_Aire.B1, I_A77_Aire.B2, I_A77_Aire.B3, I_A77_Aire.C1, I_A77_Aire.C2, I_A77_Aire.C3, I_A77_Aire.HORA_INGRESO, I_A77_Aire.HORA_SALIDA, I_A77_Aire.ID_TURNO, I_A77_Aire.RONDA, I_A77_Aire.ESTADO, I_A77_Aire.USUARIO_INGRESA, I_A77_Aire.USUARIO_MODIFICA, I_A77_Aire.FECHA_INGRESO, I_A77_Aire.FECHA_MODIFICACION));
        db.execSQL(String.format("CREATE TABLE %s (%s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s DATETIME NULL, %s DATETIME NULL)", TABLAS.A98, I_A98.ID, I_A98.ID_FILA, I_A98.ID_RACK, I_A98.ID_AREA, I_A98.INICIO, I_A98.FIN, I_A98.OBSERVACIONES, I_A98.HORA_INGRESO, I_A98.HORA_SALIDA, I_A98.ID_TURNO, I_A98.RONDA, I_A98.ESTADO, I_A98.USUARIO_INGRESA, I_A98.USUARIO_MODIFICA, I_A98.FECHA_INGRESO, I_A98.FECHA_MODIFICACION));
        db.execSQL(String.format("CREATE TABLE %s (%s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s DATETIME NULL, %s DATETIME NULL)", TABLAS.A71_AREA, I_A71_Area.ID, I_A71_Area.ID_AREA, I_A71_Area.ID_EVENTO, I_A71_Area.DESCRIPCION, I_A71_Area.HORA_INGRESO, I_A71_Area.HORA_SALIDA, I_A71_Area.ID_TURNO, I_A71_Area.RONDA, I_A71_Area.ESTADO, I_A71_Area.USUARIO_INGRESA, I_A71_Area.USUARIO_MODIFICA, I_A71_Area.FECHA_INGRESO, I_A71_Area.FECHA_MODIFICACION));
        db.execSQL(String.format("CREATE TABLE %s (%s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s TEXT NULL, %s DATETIME NULL, %s DATETIME NULL)", TABLAS.A71_PASILLO, I_A71_Pasillo.ID, I_A71_Pasillo.ID_PASILLO, I_A71_Pasillo.LUMINOSIDAD_A, I_A71_Pasillo.LUMINOSIDAD_B, I_A71_Pasillo.RUIDO_A, I_A71_Pasillo.RUIDO_B, I_A71_Pasillo.HORA_INGRESO, I_A71_Pasillo.HORA_SALIDA, I_A71_Pasillo.ID_TURNO, I_A71_Pasillo.RONDA, I_A71_Pasillo.ESTADO, I_A71_Pasillo.USUARIO_INGRESA, I_A71_Pasillo.USUARIO_MODIFICA, I_A71_Pasillo.FECHA_INGRESO, I_A71_Pasillo.FECHA_MODIFICACION));*/

    }

    @Override
    public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
        /*db.execSQL("DROP TABLE IF EXISTS " + TABLAS.OPERADOR);
        db.execSQL("DROP TABLE IF EXISTS " + TABLAS.RACK);
        db.execSQL("DROP TABLE IF EXISTS " + TABLAS.EQUIPO);
        db.execSQL("DROP TABLE IF EXISTS " + TABLAS.FILA);
        db.execSQL("DROP TABLE IF EXISTS " + TABLAS.CLIENTE);
        db.execSQL("DROP TABLE IF EXISTS " + TABLAS.CANTIDAD_UR);
        db.execSQL("DROP TABLE IF EXISTS " + TABLAS.TIPO_ALERTA);
        db.execSQL("DROP TABLE IF EXISTS " + TABLAS.COLOR_ALERTA);
        db.execSQL("DROP TABLE IF EXISTS " + TABLAS.RACK_UR);
        db.execSQL("DROP TABLE IF EXISTS " + TABLAS.TURNO);
        db.execSQL("DROP TABLE IF EXISTS " + TABLAS.ALERTA);
        db.execSQL("DROP TABLE IF EXISTS " + TABLAS.A56);
        db.execSQL("DROP TABLE IF EXISTS " + TABLAS.A58_PASILLO);
        db.execSQL("DROP TABLE IF EXISTS " + TABLAS.A58_CHILLER);
        db.execSQL("DROP TABLE IF EXISTS " + TABLAS.A71_PASILLO);
        db.execSQL("DROP TABLE IF EXISTS " + TABLAS.A71_AREA);
        db.execSQL("DROP TABLE IF EXISTS " + TABLAS.A77_PASILLO);
        db.execSQL("DROP TABLE IF EXISTS " + TABLAS.A77_AREA);
        db.execSQL("DROP TABLE IF EXISTS " + TABLAS.A77_AIRE);
        db.execSQL("DROP TABLE IF EXISTS " + TABLAS.A76);
        db.execSQL("DROP TABLE IF EXISTS " + TABLAS.A98);
        db.execSQL("DROP TABLE IF EXISTS " + TABLAS.GRUPO);
        db.execSQL("DROP TABLE IF EXISTS " + TABLAS.PASILLO);
        db.execSQL("DROP TABLE IF EXISTS " + TABLAS.AREA);
        db.execSQL("DROP TABLE IF EXISTS " + TABLAS.CHILLER);
        db.execSQL("DROP TABLE IF EXISTS " + TABLAS.TIPO_PASILLO);
        db.execSQL("DROP TABLE IF EXISTS " + TABLAS.TIPO_AREA);
        db.execSQL("DROP TABLE IF EXISTS " + TABLAS.VERSION);
        db.execSQL("DROP TABLE IF EXISTS " + TABLAS.PARAMETROS);*/
        onCreate(db);
    }

    public interface TABLAS {
        String OPERADOR = "OPERADOR";
        String RACK = "RACK";
        String EQUIPO = "EQUIPO";
        String FILA = "FILA";
        String CLIENTE = "CLIENTE";
        String CANTIDAD_UR = "CANTIDAD_UR";
        String TIPO_ALERTA = "TIPO_ALERTA";
        String COLOR_ALERTA = "COLOR_ALERTA";
        String RACK_UR = "RACK_UR";
        String TURNO = "TURNO";
        String ALERTA = "ALERTA";
        String A34_UMA = "A34_UMA";
        String A34_UPS = "A34_UPS";
        String A34_TANQUE_ECARO = "A34_TANQUE_ECARO";
        String A34_BUSWAY = "A34_BUSWAY";
        String A56 = "A56";
        String A58_PASILLO = "A58_PASILLO";
        String A58_CHILLER = "A58_CHILLER";
        String A71_PASILLO = "A71_PASILLO";
        String A71_AREA = "A71_AREA";
        String A77_PASILLO = "A77_PASILLO";
        String A77_AREA = "A77_AREA";
        String A77_AIRE = "A77_AIRE";
        String A76 = "A76";
        String A98 = "A98";
        String GRUPO = "GRUPO";
        String PASILLO = "PASILLO";
        String AREA = "AREA";
        String CHILLER = "CHILLER";
        String TIPO_PASILLO = "TIPO_PASILLO";
        String TIPO_AREA = "TIPO_AREA";
        String VERSION = "VERSION";
        String PARAMETROS = "PARAMETROS";
    }

}


